{"ast":null,"code":"var _jsxFileName = \"P:\\\\MACS\\\\Third Term\\\\Web development\\\\Tutorial 3\\\\tutorial 3\\\\src\\\\components\\\\AutoComplete.jsx\";\nimport React, { Component } from 'react';\nimport Innercomponents from \"./Innercomponents\";\nimport \"bootstrap/dist/css/bootstrap.css\"; // import Card from \"bootstrap/dist/css/card\"\n\nclass AutoComplete extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 1,\n      inputText: '',\n      autoComplete: [\"cars\", \"bikes\", \"coupe\", \"sedan\", \"wagon\", \"sportscar\", \"luxury car\"],\n      emptyvalue: \"no values to display\",\n      carsClicked: false,\n      valueclicked: '',\n      filteredValues: []\n    };\n\n    this.inputOnChange = e => {\n      const inputValue = e.target.value;\n      const {\n        autoComplete\n      } = this.state;\n      let filteredValues = [];\n      this.setState({\n        inputText: inputValue\n      });\n      if (inputValue === \"\") filteredValues = [];else filteredValues = autoComplete.filter(item => item.toLowerCase().startsWith(inputValue.toLowerCase()));\n      this.setState({\n        filteredValues\n      });\n    };\n\n    this.valueclickedfun = valueclicked => {\n      console.log(valueclicked + \"clicked in function\");\n      return /*#__PURE__*/React.createElement(Innercomponents, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      inputText,\n      filteredValues,\n      carsClicked\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, \"Please enter vehicle type like car: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"v_type\",\n      onChange: e => this.inputOnChange(e),\n      value: inputText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, filteredValues.length > 0 && filteredValues.map((filteredValue, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"pre\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        key: `${index}_filter`,\n        onClick: () => {\n          this.setState({\n            carsClicked: !carsClicked\n          });\n          this.valueclickedfun(filteredValue);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 35\n        }\n      }, filteredValue, \" \"), \" \"), \" \");\n    })), filteredValues.length === 0 && inputText !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 68\n      }\n    }, \"No results found\")));\n  }\n\n  getcount() {\n    const {\n      value: count\n    } = this.state;\n    return count;\n  }\n\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["P:/MACS/Third Term/Web development/Tutorial 3/tutorial 3/src/components/AutoComplete.jsx"],"names":["React","Component","Innercomponents","AutoComplete","state","value","inputText","autoComplete","emptyvalue","carsClicked","valueclicked","filteredValues","inputOnChange","e","inputValue","target","setState","filter","item","toLowerCase","startsWith","valueclickedfun","console","log","render","length","map","filteredValue","index","getcount","count"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Innercomponents from \"./Innercomponents\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\n// import Card from \"bootstrap/dist/css/card\"\r\n\r\nclass AutoComplete extends Component {\r\n    state = {\r\n        value: 1,\r\n        inputText:'',\r\n        autoComplete:[\"cars\",\"bikes\",\"coupe\", \"sedan\", \"wagon\", \"sportscar\", \"luxury car\"],\r\n        emptyvalue : \"no values to display\",\r\n        carsClicked:false,\r\n        valueclicked:'',\r\n        filteredValues:[]\r\n    };\r\n    // increment = () =>{\r\n    //     // this.state.value = this.state.value + 1;\r\n    //     console.log(\"increment clicked\")\r\n    //     this.setState({value : this.state.value +=1});\r\n    // };\r\n\r\n    inputOnChange = e =>{\r\n        const inputValue=e.target.value;\r\n        const {autoComplete}=this.state;\r\n        let filteredValues=[]\r\n        this.setState({inputText:inputValue})\r\n        if(inputValue===\"\") filteredValues=[]\r\n        else filteredValues=autoComplete.filter(item=> item.toLowerCase().startsWith(inputValue.toLowerCase()))\r\n        this.setState({filteredValues})\r\n    }\r\n    render(){\r\n        const {inputText,filteredValues,carsClicked}=this.state;\r\n        return(\r\n            <div>\r\n                {/* <span className=\"m-1\">{this.getcount()}</span>\r\n                <button className=\"button mt-2\" onClick={this.increment}> addition</button>\r\n                <button className=\"button mt-1 m-1\"> deletion</button> */}\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <pre>\r\n                            <label>Please enter vehicle type like car: </label>\r\n                            <input type=\"text\" name=\"v_type\" onChange={(e)=>this.inputOnChange(e)} value={inputText}/>\r\n                            </pre>\r\n                        </div>\r\n                    </div>\r\n                \r\n                <div className=\"card-body\">\r\n                {filteredValues.length>0 && \r\n                \r\n                filteredValues.map((filteredValue,index)=>{\r\n                    \r\n                return <div> <pre><button key={`${index}_filter`} onClick={()=>{\r\n                    this.setState({carsClicked:!carsClicked});\r\n                    this.valueclickedfun(filteredValue);\r\n                    }}>\r\n                 {filteredValue} </button> </pre> </div>\r\n                })\r\n                }\r\n                </div>\r\n                \r\n                {filteredValues.length === 0 && inputText!== \"\" && <div>No results found</div>}          \r\n\r\n                {/* {carsClicked && \r\n                    <div>\r\n                        <Innercomponents/>\r\n                    </div>} */}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    valueclickedfun = (valueclicked) =>\r\n    {\r\n        console.log(valueclicked + \"clicked in function\");\r\n        return <Innercomponents />\r\n    }\r\n\r\n    getcount(){\r\n        const {value: count} = this.state;\r\n        return count;\r\n    }\r\n}\r\nexport default AutoComplete"]},"metadata":{},"sourceType":"module"}